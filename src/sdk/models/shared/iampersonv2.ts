/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IamContactV2 } from "./iamcontactv2";
import { IamIntegrationsV2 } from "./iamintegrationsv2";
import { Expose, Type } from "class-transformer";

export enum IamPersonV2GenderEnum {
  Male = "MALE",
  Female = "FEMALE",
}

export enum IamPersonV2ModifiedFromEnum {
  Api = "API",
  Portal = "PORTAL",
  WebSDK = "WEB_SDK",
  Integration = "INTEGRATION",
  Push = "PUSH",
  Facebook = "FACEBOOK",
  Line = "LINE",
  Telegram = "TELEGRAM",
  Salesforce = "SALESFORCE",
  Dynamics = "DYNAMICS",
  Zapier = "ZAPIER",
  Forms = "FORMS",
  Ams = "AMS",
  Computed = "COMPUTED",
  Answers = "ANSWERS",
  Conversations = "CONVERSATIONS",
}

export enum IamPersonV2OriginEnum {
  Api = "API",
  Portal = "PORTAL",
  WebSDK = "WEB_SDK",
  Integration = "INTEGRATION",
  Push = "PUSH",
  Facebook = "FACEBOOK",
  Line = "LINE",
  Telegram = "TELEGRAM",
  Salesforce = "SALESFORCE",
  Dynamics = "DYNAMICS",
  Zapier = "ZAPIER",
  Forms = "FORMS",
  Ams = "AMS",
  Computed = "COMPUTED",
  Answers = "ANSWERS",
  Conversations = "CONVERSATIONS",
}

export enum IamPersonV2TypeEnum {
  Customer = "CUSTOMER",
  Lead = "LEAD",
  Agent = "AGENT",
}

export class IamPersonV2 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "birthDate" })
  birthDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "companyId" })
  companyId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "computedAttributes" })
  computedAttributes?: Record<string, Record<string, any>>;

  @SpeakeasyMetadata()
  @Expose({ name: "contactInformation" })
  @Type(() => IamContactV2)
  contactInformation: IamContactV2;

  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  createdAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "customAttributes" })
  customAttributes?: Record<string, Record<string, any>>;

  @SpeakeasyMetadata()
  @Expose({ name: "externalId" })
  externalId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "firstName" })
  firstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "gender" })
  gender?: IamPersonV2GenderEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "integrations" })
  @Type(() => IamIntegrationsV2)
  integrations?: IamIntegrationsV2;

  @SpeakeasyMetadata()
  @Expose({ name: "lastName" })
  lastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "middleName" })
  middleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "modifiedAt" })
  modifiedAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "modifiedFrom" })
  modifiedFrom?: IamPersonV2ModifiedFromEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "origin" })
  origin?: IamPersonV2OriginEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "profilePicture" })
  profilePicture?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: IamPersonV2TypeEnum;
}
